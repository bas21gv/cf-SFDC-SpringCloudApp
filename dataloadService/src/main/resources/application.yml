spring:
  profiles.active: local

server:
  port: 9004
security:
  basic:
    enabled: false

management:
  context-path: /manage
  security:
    enabled: false

endpoints:
  env:
    keys-to-sanitize: pwd,uid,password,secret,key,client_id,client_key # suffix or regex

logging:
  level:
    com.netflix: INFO
    org.springframework.cloud: DEBUG
    io.pivotal.sfdc: DEBUG

info:
  component: Dataload Service
  app:
    name: ${project.name:dataloadService}
    version: ${project.version:0.0.1-SNAPSHOT}
    group: ${project.groupId:io.pivotal.sfdc}
    artifact: ${project.artifactId:dataloadService}

sfdc:
  service:
    unavailable: '{"status":503,"data": "Service currently unavailable."}'
  client_id: 3MVG9A2kN3Bn17hv8siDyJtftcr88aXG3TpBJIqO8QZac_dpXPEoQy08vgi651aB8y6QdfgCkW0HsDIyQeH1V
  client_key: 4631320832041516337
  uid: jigsheth@sfdc.com
  pwd: Pivotal1234mpY9LIqi4zImvqRZI8zYP2p3
  query:
    loadsql: select account.id, account.name, account.type, account.description, account.industry, account.ownership, account.website, account.phone, account.NumberOfEmployees, (select contact.id, contact.title, contact.department, contact.email, contact.name, contact.salutation, contact.phone, contact.mobilePhone, contact.firstName, contact.accountId, contact.lastname from account.contacts), (select opportunity.id, opportunity.name, opportunity.type, opportunity.amount, opportunity.stagename, opportunity.closedate, opportunity.description, opportunity.nextStep, opportunity.leadSource, opportunity.accountId from account.opportunities) from account

---
spring:
  profiles: local
  redis:
    host: localhost
    port: 6379
    password: guest

---
spring:
  profiles: cloud # For deployment in Cloud Foundry
